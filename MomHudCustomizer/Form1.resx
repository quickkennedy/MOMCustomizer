<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        r0eVdwAAAABJRU5ErkJggg==
</value>
  </data>
</root>